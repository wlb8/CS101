'''
CS 101 Lab
Program #6
Willem Battey
wlbqx8@umsystem.edu

Algorithm: 1. create all the functions given in the prompt
2. for get_school have it so it checks the 6 character to make sure it is 1-3 do this using if statements
3. get_grade same as get_school but check for 1-4 and print out the grade things
4. character_value make it so when it's called it will get the value of the character in question 
5. get_check_digit use the equation to calculate the check digit
6. verify_check_digit go through the library card and make sure it meets all the requirements. use if statements
7. set up a loop so long as the user doesn't input nothing ('') it will keep running
8. make it so when verify_check_digit returns True it prints out the wanted text to the user
9. prompt the user for an input again
'''



import string
def get_school(lib_card):
    if int(lib_card[5]) == 1:
        school = "School of Computing and Engineering SCE"
        return school
    elif int(lib_card[5]) == 2:
        school = "School of law"
        return school
    elif int(lib_card[5]) == 3:
        school = "College of Arts and Sciences"
        return school
    else:
        invalid = "Invalid school"
        return invalid

def get_grade(lib_card):
    if int(lib_card[6]) == 1:
        grade = "Freshman"
        return grade
    elif int(lib_card[6]) == 2:
        grade = "Sophomore"
        return grade
    elif int(lib_card[6]) == 3:
        grade = "Junior"
        return grade
    elif int(lib_card[6]) == 4:
        grade = "Senior"
        return grade
    else:
        grade = "Invalid grade"
        return grade


def character_value(ch):
    if ch.isalpha():
        char_value = string.ascii_uppercase.index(ch)
        return char_value
    elif ch.isdigit():
        char_value = int(ch)
        return char_value

def get_check_digit(lib_card):
        total = 0
        for x in lib_card[: 5]:
                tab = (lib_card.index(x) + 1)
                one4 = tab * character_value(x)
                total += one4
        for x in lib_card[5:9]:
                tab = (lib_card.index(x) + 1)
                five9 = tab * int(x)
                total += five9
        check = total % 10
        return check




def verify_check_digit(lib_card):
    if len(lib_card) != 10:
        return False, print("The length of the number given must be 10")
    for x in lib_card[0:4]:
        if x.isalpha() != True:
            return False, print("The first 5 characters must be A-Z, the invalid character is at", lib_card.index(x), "is", x)
    for x in lib_card[7:9]:
        if int(x) < 0 and int(x) > 9:
            return False, print("The last 3 characters must be 0-9, the invalid character is at", lib_card.index(x), "is", x)
    if lib_card[5] not in ('1', '2') and lib_card[5] not in ('3'):
        return False, print("The sixth character must be 1 2 or 3")
    if lib_card[6] not in ('1', '2') and lib_card[6] not in ('3', '4'):
        return False, print("The seventh character must be 1 2 3 or 4")
    if int(lib_card[9]) != get_check_digit(lib_card):
        che = get_check_digit(lib_card)
        return False, print("Check Digit", lib_card[9], "does not match calculated value", che)
    elif lib_card == lib_card:
        return True, ''



if __name__ == "__main__":
    lib_card = input("Enter Library Card. Hit Enter to Exit ==> ")
    while lib_card != '': 
        get_check_digit(lib_card)
        bol, say = verify_check_digit(lib_card)
        if bol == True and say == '':
            print("Library Card is Valid")
            print("This card belongs to a student in", get_school(lib_card))
            print("This card belongs to a ", get_grade(lib_card))
        lib_card = input("Enter Library Card. Hit Enter to Exit ==> ")
